version: '3.4'

services:
  timescale_db:
    image: timescale/timescaledb-ha:pg14-latest
    ports:
      - "5432:5432/tcp"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

  prometheus:
    image: prom/prometheus:latest
    command: --enable-feature=remote-write-receiver --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090/tcp"
    volumes:
      - ${PWD}/config/prometheus.yml:/etc/prometheus/prometheus.yml

  promscale:
    image: timescale/promscale:latest
    ports:
      - "9201:9201/tcp"
    restart: on-failure
    depends_on:
      - timescale_db
      - prometheus
    environment:
      PROMSCALE_DB_CONNECT_RETRIES: 10
      PROMSCALE_WEB_TELEMETRY_PATH: /metrics-text
      PROMSCALE_DB_URI: postgres://postgres:password@timescale_db:5432/postgres?sslmode=allow

  tempo:
    image: grafana/tempo:latest
    command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ${PWD}/config/tempo.yaml:/etc/tempo.yaml
      - ${PWD}/data/tempo:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_USERS_DEFAULT_THEME=light
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    volumes:
      - ${PWD}/config/grafana.ini:/etc/grafana/grafana.ini
      - ${PWD}/config/provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ${PWD}/config/provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ${PWD}/config/apim-performances.json:/var/lib/grafana/dashboards/apim-performances.json:ro

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081

  reporter:
    image: izakmarais/grafana-reporter:latest
    command: "-ip host.docker.internal:3001"
    ports:
      - "8686:8686"
